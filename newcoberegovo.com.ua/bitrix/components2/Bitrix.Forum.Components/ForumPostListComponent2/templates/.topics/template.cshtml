@using System.Collections.Generic
@using Bitrix.Forum.Components
@using Bitrix.Services.Text
@using Bitrix.Security
@using Bitrix.Services
@using System.Text
@using System.Collections.Specialized

@model Bitrix.Forum.Components.ForumPostListComponent2

@if (Model.HasErrors)
{ 
    <div class="forum-content">
        <div class="forum-note-box forum-note-error">
            <div class="forum-note-box-text">@Html.Raw(Model.ErrorText)</div>
        </div>	
    </div>
    return;
}

@{
    Model.Context.Head.RequireJQuery();
    var BaseId = Model.Context.BaseId;
}

@functions{

    private const string TargetParameter = "_target";
    private const string OperationParameter = "_action";
    private const string PostIdParameter = "_id";
    
    private string GetRedirectUrl()
    {
        NameValueCollection query = HttpUtility.ParseQueryString(BXSefUrlManager.CurrentUrl.Query);
        query.Remove(TargetParameter);
        query.Remove(OperationParameter);
        query.Remove(BXCsrfToken.TokenKey);

        UriBuilder uri = new UriBuilder(BXSefUrlManager.CurrentUrl);
        if (query.Count > 0)
            uri.Query = query.ToString();

        return uri.Uri.ToString();
    }
}

<div class="forum-content">

<div class="forum-navigation-box forum-navigation-top">
	<div class="forum-page-navigation">
		@Html.RenderComponent("topPager")
	</div>
	<div class="forum-new-post">
	</div>
	<div class="forum-clear-float"></div>
</div>

<div class="forum-header-box">
	<div class="forum-header-title"><span>@this.GetMessage("HeaderText." + Model.DisplayMode.ToString())</span></div>
</div>

<div class="forum-block-container">
	<div class="forum-block-outer">
		<div class="forum-block-inner">
			<table cellspacing="0" class="forum-table forum-topic-list">
            @if (Model.Posts.Count > 0)
            {
                using (Html.BeginSecureForm("PostOperation"))
                {
                    <thead>
                        <tr>
                            <th class="forum-column-title" colspan="2"><div class="forum-head-title"><span>@this.GetMessage("Topics")</span></div></th>
                            <th class="forum-column-replies"><span>@this.GetMessage("Replies")</span></th>
                            <th class="forum-column-views"><span>@this.GetMessage("Views")</span></th>
                            <th class="forum-column-lastpost"><span>@this.GetMessage("LastPost")</span></th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            StringBuilder cssClass = new StringBuilder();
                            StringBuilder statusHtml = new StringBuilder();
                            string statusFormat = @"<span class=""{0}"">{1}</span>";
                            for (int i = 0; i < Model.Posts.Count; i++)
                            {
                                var info = Model.Posts[i];
                                cssClass.Length = 0;
                                if (i == 0)
                                {
                                    cssClass.Append("forum-row-first ");
                                }
                                if (i == Model.Posts.Count - 1)
                                {
                                    cssClass.Append("forum-row-last ");
                                }
                                cssClass.Append(i % 2 == 0 ? "forum-row-odd" : "forum-row-even"); //because of zero-based index
                                statusHtml.Length = 0;
                                if (info.Topic.StickyIndex > 0)
                                {
                                    cssClass.Append(" forum-row-sticky");
                                    statusHtml.AppendFormat(statusFormat, "forum-status-sticky", Html.Raw(this.GetMessage("Status.Sticky")));
                                }
                                if (info.Topic.Closed)
                                {
                                    cssClass.Append(" forum-row-closed");
                                    if (statusHtml.Length > 0)
                                    {
                                        statusHtml.Append(", ");
                                    }
                                    statusHtml.AppendFormat(statusFormat, "forum-status-closed", Html.Raw(this.GetMessage("Status.Closed")));
                                }
                                if (info.Topic.MovedTo > 0)
                                {
                                    cssClass.Append(" forum-row-moved");
                                    if (statusHtml.Length > 0)
                                    {
                                        statusHtml.Append(", ");
                                    }
                                    statusHtml.AppendFormat(statusFormat, "forum-status-moved", Html.Raw(this.GetMessage("Status.Moved")));
                                }
                                if (!info.Topic.Approved)
                                {
                                    cssClass.Append(" forum-row-hidden");
                                }

                                string iconCss;
                                string iconTitle;
                                if (info.Topic.MovedTo > 0)
                                {
                                    iconCss = "forum-icon-sticky";
                                    iconTitle = this.GetMessage("Title.Moved");
                                }
                                else if (info.Topic.Closed)
                                {
                                    if (info.Topic.StickyIndex > 0)
                                    {
                                        iconCss = "forum-icon-sticky-closed" + (info.TopicHasNewPosts ? "-newposts" : string.Empty);
                                        iconTitle = this.GetMessage("Title.StickyClosed") + (info.TopicHasNewPosts ? (" (" + this.GetMessage("Title.HasNewMessages") + ")") : string.Empty);
                                    }
                                    else
                                    {
                                        iconCss = "forum-icon-closed" + (info.TopicHasNewPosts ? "-newposts" : string.Empty);
                                        iconTitle = this.GetMessage("Title.Closed") + (info.TopicHasNewPosts ? (" (" + this.GetMessage("Title.HasNewMessages") + ")") : string.Empty);
                                    }
                                }
                                else if (info.Topic.StickyIndex > 0)
                                {
                                    iconCss = "forum-icon-sticky" + (info.TopicHasNewPosts ? "-newposts" : string.Empty);
                                    iconTitle = this.GetMessage("Title.Sticky") + (info.TopicHasNewPosts ? (" (" + this.GetMessage("Title.HasNewMessages") + ")") : string.Empty);
                                }
                                else
                                {
                                    iconCss = "forum-icon" + (info.TopicHasNewPosts ? "-newposts" : "-default");
                                    iconTitle = String.Empty;
                                }


                                if (statusHtml.Length > 0)
                                {
                                    statusHtml.Append(":&nbsp;");
                                }
                                <tr class="@cssClass">
                                    <td class="forum-column-icon">
                                        <div class="forum-icon-container">
                                            <div class="forum-icon @iconCss" title="@iconTitle"><!-- ie --></div>
                                        </div>
                                    </td>
                                    <td class="forum-column-title">
                                        <div class="forum-item-info">
                                            <div class="forum-item-name">@statusHtml<span class="forum-item-title"><a href="@info.TopicReadUrl">@info.TopicTitleHtml</a></span></div>
                                            @if (!string.IsNullOrEmpty(info.TopicDescriptionHtml))
                                            {
                                                <span class="forum-item-desc">@info.TopicDescriptionHtml</span>
                                                <span class="forum-item-desc-sep">&nbsp;&middot; </span>
                                            }
                                            <span class="forum-item-author"><span>@this.GetMessage("Author"):</span>&nbsp;@(info.Topic.AuthorId == 0 ? this.GetMessage("Guest") : string.Empty)@info.AuthorName</span>
                                            <span class="forum-item-forumname">
                                                <span>@this.GetMessage("InForum")</span>&nbsp;<a href="@info.ForumReadUrl">@info.ForumName</a>
                                            </span>
                                        </div>
                                    </td>
                                    @if (info.Topic.MovedTo == 0)
                                    {
                                        <td class="forum-column-replies"><span>@info.TopicReplies.ToString("#,0")</span></td>
                                        <td class="forum-column-views"><span>@info.Topic.Views.ToString("#,0")</span></td>
                                    }
                                    else
                                    {
                                        <td class="forum-column-replies"><span>&nbsp;</span></td>
                                        <td class="forum-column-views"><span>&nbsp;</span></td>
                                    }
                                    <td class="forum-column-lastpost">
                                        @if (info.Topic.MovedTo == 0)
                                        {
                                            <div class="forum-lastpost-box">
                                                <span class="forum-lastpost-date"><a href="@info.TopicLastPostHref">@info.Topic.LastPostDate.ToString("g")</a></span>
                                                <span class="forum-lastpost-title"><span class="forum-lastpost-author">
                                                                                       @(info.Topic.LastPosterId == 0 ? this.GetMessage("Guest") : string.Empty)@info.TopicLastPosterNameHtml</span></span>
                                            </div>
                                        }
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                    <tfoot>
                        <tr>
                            <td colspan="5" class="forum-column-footer">
                                <div class="forum-footer-inner">&nbsp;</div>
                            </td>
                        </tr>
                    </tfoot>
                }
            }
            else
            {
			    <tbody>
 				    <tr class="forum-row-first forum-row-last forum-row-odd">
					    <td class="forum-column-alone">
						    <div class="forum-empty-message">
						        @this.GetMessage("EmptyMessage")
						    </div>
					    </td>
				    </tr>
			    </tbody>
			    <tfoot>
				    <tr>
					    <td class="forum-column-footer">
						    <div class="forum-footer-inner">&nbsp;</div>
					    </td>
				    </tr>
			    </tfoot>
            }
			</table>
		</div>
	</div>
</div>
<div class="forum-navigation-box forum-navigation-bottom">
	<div class="forum-page-navigation">
		@Html.RenderComponent("bottomPager")
	</div>

	<div class="forum-new-post">
	</div>

	<div class="forum-clear-float"></div>
</div>

</div>

